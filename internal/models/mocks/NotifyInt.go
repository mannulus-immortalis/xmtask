// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	models "github.com/mannulus-immortalis/xmtask/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// NotifyInt is an autogenerated mock type for the NotifyInt type
type NotifyInt struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *NotifyInt) Close() {
	_m.Called()
}

// Send provides a mock function with given fields: event
func (_m *NotifyInt) Send(event models.EventNotifications) error {
	ret := _m.Called(event)

	if len(ret) == 0 {
		panic("no return value specified for Send")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(models.EventNotifications) error); ok {
		r0 = rf(event)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewNotifyInt creates a new instance of NotifyInt. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewNotifyInt(t interface {
	mock.TestingT
	Cleanup(func())
}) *NotifyInt {
	mock := &NotifyInt{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
